version: "3"

services:
  # https://github.com/sigoden/dufs
  # serves static files at an HTTP endpoint
  dufs:
    image: docker.io/sigoden/dufs:latest
    networks:
      - backend
    command:
      - "/data"
    volumes:
      - ${PWD}/tests/data/http-scrape/:/data
  # the project suggests that two services should not be necessary
  # yet I was not able to only auth protect one path for view/download access.
  dufs-auth:
    image: docker.io/sigoden/dufs:latest
    networks:
      - backend
    command:
      - "-a"
      - "/@user:pass"
      - "--auth-method"
      - "basic"
      - "/data"
    volumes:
      - ${PWD}/tests/data/http-scrape/:/data
  dufs-https:
    image: docker.io/sigoden/dufs:latest
    networks:
      - backend
    command:
      - "--tls-cert"
      - "dufs.crt"
      - "--tls-key"
      - "dufs.key"
      - "/data"
    volumes:
      - ${PWD}/tests/data/http-scrape/:/data
  runner:
    build:
      context: ${PWD}
      dockerfile: scripts/integration/Dockerfile
      args:
        - RUST_VERSION=${RUST_VERSION}
    working_dir: /code
    networks:
      - backend
    command:
      - "cargo"
      - "nextest"
      - "run"
      - "--no-fail-fast"
      - "--no-default-features"
      - "--features"
      - "http-scrape-integration-tests"
      - "--lib"
      - "sources::http_scrape::scrape::"
    depends_on:
      - dufs
      - dufs-auth
    volumes:
      - ${PWD}:/code
      - cargogit:/usr/local/cargo/git
      - cargoregistry:/usr/local/cargo/registry

networks:
  backend: {}

volumes:
  cargogit: {}
  cargoregistry: {}
